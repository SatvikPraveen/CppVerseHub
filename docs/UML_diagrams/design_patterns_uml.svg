<svg width="1400" height="1000" xmlns="http://www.w3.org/2000/svg">
  <!-- Location: CppVerseHub/docs/UML_diagrams/design_patterns.svg -->
  
  <!-- Title -->
  <text x="700" y="25" font-family="Arial, sans-serif" font-size="18" font-weight="bold" text-anchor="middle" fill="#333">
    Design Pattern Implementations - CppVerseHub
  </text>
  
  <!-- Singleton Pattern Section -->
  <rect x="50" y="50" width="400" height="200" fill="#e8f5e8" stroke="#4CAF50" stroke-width="2" rx="5"/>
  <text x="250" y="75" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#333">
    Singleton Pattern
  </text>
  
  <!-- ResourceManager Singleton -->
  <rect x="70" y="90" width="180" height="140" fill="#fff" stroke="#4CAF50" stroke-width="1" rx="3"/>
  <text x="160" y="110" font-family="Arial, sans-serif" font-size="14" font-weight="bold" text-anchor="middle" fill="#333">
    ResourceManager
  </text>
  <text x="160" y="125" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    &lt;&lt;singleton&gt;&gt;
  </text>
  <line x1="80" y1="135" x2="240" y2="135" stroke="#666" stroke-width="1"/>
  <text x="80" y="150" font-family="Arial, sans-serif" font-size="10" fill="#333">
    - instance_: static unique_ptr
  </text>
  <text x="80" y="165" font-family="Arial, sans-serif" font-size="10" fill="#333">
    - total_resources_: double
  </text>
  <text x="80" y="180" font-family="Arial, sans-serif" font-size="10" fill="#333">
    - mutex_: mutex
  </text>
  <line x1="80" y1="190" x2="240" y2="190" stroke="#666" stroke-width="1"/>
  <text x="80" y="205" font-family="Arial, sans-serif" font-size="10" fill="#333">
    + getInstance(): static&amp;
  </text>
  <text x="80" y="220" font-family="Arial, sans-serif" font-size="10" fill="#333">
    + allocate(double): bool
  </text>
  
  <!-- Singleton Benefits -->
  <rect x="270" y="90" width="160" height="140" fill="#f1f8e9" stroke="#689f38" stroke-width="1" rx="3"/>
  <text x="350" y="110" font-family="Arial, sans-serif" font-size="12" font-weight="bold" text-anchor="middle" fill="#333">
    Benefits
  </text>
  <text x="280" y="130" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Global access point
  </text>
  <text x="280" y="145" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Controlled instantiation
  </text>
  <text x="280" y="160" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Thread-safe access
  </text>
  <text x="280" y="175" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Lazy initialization
  </text>
  <text x="280" y="190" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Resource coordination
  </text>
  <text x="280" y="205" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • State consistency
  </text>
  <text x="280" y="220" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Memory efficiency
  </text>

  <!-- Factory Pattern Section -->
  <rect x="500" y="50" width="450" height="200" fill="#fff3e0" stroke="#FF9800" stroke-width="2" rx="5"/>
  <text x="725" y="75" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#333">
    Factory Pattern
  </text>
  
  <!-- Abstract Factory -->
  <rect x="520" y="90" width="140" height="80" fill="#fff" stroke="#FF9800" stroke-width="1" rx="3"/>
  <text x="590" y="110" font-family="Arial, sans-serif" font-size="12" font-weight="bold" text-anchor="middle" fill="#333">
    EntityFactory
  </text>
  <text x="590" y="125" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    &lt;&lt;abstract&gt;&gt;
  </text>
  <line x1="530" y1="135" x2="650" y2="135" stroke="#666" stroke-width="1"/>
  <text x="530" y="150" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + createPlanet() = 0
  </text>
  <text x="530" y="165" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + createFleet() = 0
  </text>
  
  <!-- Concrete Factory -->
  <rect x="520" y="180" width="140" height="60" fill="#fff" stroke="#FF9800" stroke-width="1" rx="3"/>
  <text x="590" y="200" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    StandardFactory
  </text>
  <line x1="530" y1="210" x2="650" y2="210" stroke="#666" stroke-width="1"/>
  <text x="530" y="225" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + createPlanet() override
  </text>
  <text x="530" y="235" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + createFleet() override
  </text>
  
  <!-- Products -->
  <rect x="680" y="90" width="100" height="50" fill="#f3e5f5" stroke="#9c27b0" stroke-width="1" rx="3"/>
  <text x="730" y="110" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    Planet
  </text>
  <text x="730" y="130" font-family="Arial, sans-serif" font-size="9" text-anchor="middle" fill="#333">
    (Product)
  </text>
  
  <rect x="680" y="150" width="100" height="50" fill="#f3e5f5" stroke="#9c27b0" stroke-width="1" rx="3"/>
  <text x="730" y="170" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    Fleet
  </text>
  <text x="730" y="190" font-family="Arial, sans-serif" font-size="9" text-anchor="middle" fill="#333">
    (Product)
  </text>
  
  <!-- Factory Benefits -->
  <rect x="800" y="90" width="130" height="110" fill="#f1f8e9" stroke="#689f38" stroke-width="1" rx="3"/>
  <text x="865" y="110" font-family="Arial, sans-serif" font-size="12" font-weight="bold" text-anchor="middle" fill="#333">
    Benefits
  </text>
  <text x="810" y="130" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Decoupled creation
  </text>
  <text x="810" y="145" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Easy to extend
  </text>
  <text x="810" y="160" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Consistent interface
  </text>
  <text x="810" y="175" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Runtime decisions
  </text>
  <text x="810" y="190" font-family="Arial, sans-serif" font-size="9" fill="#333">
    • Testability
  </text>

  <!-- Observer Pattern Section -->
  <rect x="1000" y="50" width="350" height="200" fill="#e8f4fd" stroke="#2196F3" stroke-width="2" rx="5"/>
  <text x="1175" y="75" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#333">
    Observer Pattern
  </text>
  
  <!-- Subject -->
  <rect x="1020" y="90" width="120" height="100" fill="#fff" stroke="#2196F3" stroke-width="1" rx="3"/>
  <text x="1080" y="110" font-family="Arial, sans-serif" font-size="12" font-weight="bold" text-anchor="middle" fill="#333">
    Planet
  </text>
  <text x="1080" y="125" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    (Subject)
  </text>
  <line x1="1030" y1="135" x2="1130" y2="135" stroke="#666" stroke-width="1"/>
  <text x="1030" y="150" font-family="Arial, sans-serif" font-size="9" fill="#333">
    - observers_: vector
  </text>
  <line x1="1030" y1="160" x2="1130" y2="160" stroke="#666" stroke-width="1"/>
  <text x="1030" y="175" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + addObserver()
  </text>
  <text x="1030" y="185" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + notifyObservers()
  </text>
  
  <!-- Observer Interface -->
  <rect x="1160" y="90" width="120" height="60" fill="#fff" stroke="#2196F3" stroke-width="1" rx="3"/>
  <text x="1220" y="110" font-family="Arial, sans-serif" font-size="12" font-weight="bold" text-anchor="middle" fill="#333">
    Observer
  </text>
  <text x="1220" y="125" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    &lt;&lt;interface&gt;&gt;
  </text>
  <line x1="1170" y1="135" x2="1270" y2="135" stroke="#666" stroke-width="1"/>
  <text x="1170" y="145" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + update() = 0
  </text>
  
  <!-- Concrete Observers -->
  <rect x="1160" y="160" width="120" height="40" fill="#fff" stroke="#2196F3" stroke-width="1" rx="3"/>
  <text x="1220" y="175" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    MissionControl
  </text>
  <text x="1220" y="190" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + update() override
  </text>
  
  <rect x="1160" y="210" width="120" height="30" fill="#fff" stroke="#2196F3" stroke-width="1" rx="3"/>
  <text x="1220" y="225" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    ResourceMonitor
  </text>

  <!-- Strategy Pattern Section -->
  <rect x="50" y="300" width="450" height="180" fill="#fce4ec" stroke="#E91E63" stroke-width="2" rx="5"/>
  <text x="275" y="325" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#333">
    Strategy Pattern
  </text>
  
  <!-- Context -->
  <rect x="70" y="340" width="120" height="80" fill="#fff" stroke="#E91E63" stroke-width="1" rx="3"/>
  <text x="130" y="360" font-family="Arial, sans-serif" font-size="12" font-weight="bold" text-anchor="middle" fill="#333">
    NavigationSystem
  </text>
  <text x="130" y="375" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    (Context)
  </text>
  <line x1="80" y1="385" x2="180" y2="385" stroke="#666" stroke-width="1"/>
  <text x="80" y="400" font-family="Arial, sans-serif" font-size="9" fill="#333">
    - strategy_: Strategy
  </text>
  <text x="80" y="415" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + calculateRoute()
  </text>
  
  <!-- Strategy Interface -->
  <rect x="210" y="340" width="120" height="60" fill="#fff" stroke="#E91E63" stroke-width="1" rx="3"/>
  <text x="270" y="360" font-family="Arial, sans-serif" font-size="12" font-weight="bold" text-anchor="middle" fill="#333">
    PathfindingStrategy
  </text>
  <text x="270" y="375" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    &lt;&lt;interface&gt;&gt;
  </text>
  <line x1="220" y1="385" x2="320" y2="385" stroke="#666" stroke-width="1"/>
  <text x="220" y="395" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + findPath() = 0
  </text>
  
  <!-- Concrete Strategies -->
  <rect x="350" y="340" width="100" height="40" fill="#fff" stroke="#E91E63" stroke-width="1" rx="3"/>
  <text x="400" y="355" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    DirectRoute
  </text>
  <text x="400" y="370" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + findPath() override
  </text>
  
  <rect x="350" y="390" width="100" height="40" fill="#fff" stroke="#E91E63" stroke-width="1" rx="3"/>
  <text x="400" y="405" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    SafeRoute
  </text>
  <text x="400" y="420" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + findPath() override
  </text>
  
  <rect x="350" y="440" width="100" height="40" fill="#fff" stroke="#E91E63" stroke-width="1" rx="3"/>
  <text x="400" y="455" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    EfficientRoute
  </text>
  <text x="400" y="470" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + findPath() override
  </text>

  <!-- Builder Pattern Section -->
  <rect x="550" y="300" width="400" height="180" fill="#f3e5f5" stroke="#9C27B0" stroke-width="2" rx="5"/>
  <text x="750" y="325" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#333">
    Builder Pattern
  </text>
  
  <!-- Director -->
  <rect x="570" y="340" width="100" height="60" fill="#fff" stroke="#9C27B0" stroke-width="1" rx="3"/>
  <text x="620" y="360" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    FleetDirector
  </text>
  <line x1="580" y1="370" x2="660" y2="370" stroke="#666" stroke-width="1"/>
  <text x="580" y="385" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + buildFleet()
  </text>
  <text x="580" y="395" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + getResult()
  </text>
  
  <!-- Abstract Builder -->
  <rect x="690" y="340" width="100" height="80" fill="#fff" stroke="#9C27B0" stroke-width="1" rx="3"/>
  <text x="740" y="360" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    FleetBuilder
  </text>
  <text x="740" y="375" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    &lt;&lt;abstract&gt;&gt;
  </text>
  <line x1="700" y1="385" x2="780" y2="385" stroke="#666" stroke-width="1"/>
  <text x="700" y="400" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + buildShips() = 0
  </text>
  <text x="700" y="410" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + buildWeapons() = 0
  </text>
  
  <!-- Concrete Builder -->
  <rect x="810" y="340" width="120" height="80" fill="#fff" stroke="#9C27B0" stroke-width="1" rx="3"/>
  <text x="870" y="360" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    MilitaryFleetBuilder
  </text>
  <line x1="820" y1="370" x2="920" y2="370" stroke="#666" stroke-width="1"/>
  <text x="820" y="385" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + buildShips() override
  </text>
  <text x="820" y="395" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + buildWeapons() override
  </text>
  <text x="820" y="405" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + buildShields() override
  </text>
  <text x="820" y="415" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + getResult(): Fleet
  </text>
  
  <!-- Product -->
  <rect x="690" y="440" width="100" height="30" fill="#f1f8e9" stroke="#689f38" stroke-width="1" rx="3"/>
  <text x="740" y="455" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    Fleet
  </text>
  <text x="740" y="465" font-family="Arial, sans-serif" font-size="9" text-anchor="middle" fill="#666">
    (Product)
  </text>

  <!-- Command Pattern Section -->
  <rect x="1000" y="300" width="350" height="180" fill="#fff8e1" stroke="#FFC107" stroke-width="2" rx="5"/>
  <text x="1175" y="325" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#333">
    Command Pattern
  </text>
  
  <!-- Command Interface -->
  <rect x="1020" y="340" width="100" height="60" fill="#fff" stroke="#FFC107" stroke-width="1" rx="3"/>
  <text x="1070" y="360" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    Command
  </text>
  <text x="1070" y="375" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    &lt;&lt;interface&gt;&gt;
  </text>
  <line x1="1030" y1="385" x2="1110" y2="385" stroke="#666" stroke-width="1"/>
  <text x="1030" y="395" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + execute() = 0
  </text>
  
  <!-- Concrete Commands -->
  <rect x="1140" y="340" width="90" height="50" fill="#fff" stroke="#FFC107" stroke-width="1" rx="3"/>
  <text x="1185" y="360" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    MoveCommand
  </text>
  <text x="1185" y="375" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + execute() override
  </text>
  <text x="1185" y="385" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + undo() override
  </text>
  
  <rect x="1140" y="400" width="90" height="40" fill="#fff" stroke="#FFC107" stroke-width="1" rx="3"/>
  <text x="1185" y="415" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    AttackCommand
  </text>
  <text x="1185" y="430" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + execute() override
  </text>
  
  <!-- Invoker -->
  <rect x="1250" y="340" width="80" height="60" fill="#fff" stroke="#FFC107" stroke-width="1" rx="3"/>
  <text x="1290" y="360" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    GameController
  </text>
  <text x="1290" y="375" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    (Invoker)
  </text>
  <line x1="1260" y1="385" x2="1320" y2="385" stroke="#666" stroke-width="1"/>
  <text x="1260" y="395" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + execute()
  </text>
  
  <!-- Receiver -->
  <rect x="1020" y="420" width="100" height="50" fill="#fff" stroke="#FFC107" stroke-width="1" rx="3"/>
  <text x="1070" y="440" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    Fleet
  </text>
  <text x="1070" y="455" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    (Receiver)
  </text>
  <text x="1070" y="465" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + move(), attack()
  </text>

  <!-- Adapter Pattern Section -->
  <rect x="50" y="520" width="400" height="160" fill="#e1f5fe" stroke="#03A9F4" stroke-width="2" rx="5"/>
  <text x="250" y="545" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#333">
    Adapter Pattern
  </text>
  
  <!-- Target Interface -->
  <rect x="70" y="560" width="100" height="60" fill="#fff" stroke="#03A9F4" stroke-width="1" rx="3"/>
  <text x="120" y="580" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    ModernNav
  </text>
  <text x="120" y="595" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    (Target)
  </text>
  <line x1="80" y1="605" x2="160" y2="605" stroke="#666" stroke-width="1"/>
  <text x="80" y="615" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + navigate() = 0
  </text>
  
  <!-- Adapter -->
  <rect x="190" y="560" width="100" height="80" fill="#fff" stroke="#03A9F4" stroke-width="1" rx="3"/>
  <text x="240" y="580" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    NavAdapter
  </text>
  <text x="240" y="595" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    (Adapter)
  </text>
  <line x1="200" y1="605" x2="280" y2="605" stroke="#666" stroke-width="1"/>
  <text x="200" y="620" font-family="Arial, sans-serif" font-size="9" fill="#333">
    - legacy_: LegacyNav
  </text>
  <text x="200" y="630" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + navigate() override
  </text>
  
  <!-- Adaptee -->
  <rect x="310" y="560" width="120" height="80" fill="#fff" stroke="#03A9F4" stroke-width="1" rx="3"/>
  <text x="370" y="580" font-family="Arial, sans-serif" font-size="11" font-weight="bold" text-anchor="middle" fill="#333">
    LegacyNavSystem
  </text>
  <text x="370" y="595" font-family="Arial, sans-serif" font-size="10" font-style="italic" text-anchor="middle" fill="#666">
    (Adaptee)
  </text>
  <line x1="320" y1="605" x2="420" y2="605" stroke="#666" stroke-width="1"/>
  <text x="320" y="620" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + setCoordinates()
  </text>
  <text x="320" y="630" font-family="Arial, sans-serif" font-size="9" fill="#333">
    + engageAutopilot()
  </text>

  <!-- Decorator Pattern Section -->
  <rect x="500" y="520" width="400" height="160" fill="#f9fbe7" stroke="#827717" stroke-width="2" rx="5"/>
  <text x="700" y="545" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#333">
    Decorator Pattern
  </text>
  
  <!-- Component Interface -->
  <rect x="520" y="560" width="80" height="60" fill="#fff" stroke="#827717" stroke-width="1" rx="3"/>
  <text x="560" y="580" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    Mission
  </text>
  <text x="560" y="595" font-family="Arial, sans-serif" font-size="9" font-style="italic" text-anchor="middle" fill="#666">
    (Component)
  </text>
  <text x="560" y="610" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + execute() = 0
  </text>
  
  <!-- Base Decorator -->
  <rect x="620" y="560" width="100" height="80" fill="#fff" stroke="#827717" stroke-width="1" rx="3"/>
  <text x="670" y="580" font-family="Arial, sans-serif" font-size="10" font-weight="bold" text-anchor="middle" fill="#333">
    MissionDecorator
  </text>
  <text x="670" y="595" font-family="Arial, sans-serif" font-size="9" font-style="italic" text-anchor="middle" fill="#666">
    (Decorator)
  </text>
  <line x1="630" y1="605" x2="710" y2="605" stroke="#666" stroke-width="1"/>
  <text x="630" y="620" font-family="Arial, sans-serif" font-size="8" fill="#333">
    - mission_: Mission
  </text>
  <text x="630" y="630" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + execute() override
  </text>
  
  <!-- Concrete Decorators -->
  <rect x="740" y="560" width="80" height="40" fill="#fff" stroke="#827717" stroke-width="1" rx="3"/>
  <text x="780" y="575" font-family="Arial, sans-serif" font-size="9" font-weight="bold" text-anchor="middle" fill="#333">
    StealthMission
  </text>
  <text x="780" y="590" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + execute() override
  </text>
  
  <rect x="740" y="610" width="80" height="40" fill="#fff" stroke="#827717" stroke-width="1" rx="3"/>
  <text x="780" y="625" font-family="Arial, sans-serif" font-size="9" font-weight="bold" text-anchor="middle" fill="#333">
    ArmoredMission
  </text>
  <text x="780" y="640" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + execute() override
  </text>
  
  <!-- Concrete Component -->
  <rect x="830" y="580" width="60" height="40" fill="#fff" stroke="#827717" stroke-width="1" rx="3"/>
  <text x="860" y="595" font-family="Arial, sans-serif" font-size="9" font-weight="bold" text-anchor="middle" fill="#333">
    BasicMission
  </text>
  <text x="860" y="610" font-family="Arial, sans-serif" font-size="8" fill="#333">
    + execute()
  </text>

  <!-- Pattern Benefits Summary -->
  <rect x="950" y="520" width="400" height="160" fill="#fafafa" stroke="#757575" stroke-width="2" rx="5"/>
  <text x="1150" y="545" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#333">
    Pattern Benefits Summary
  </text>
  
  <text x="960" y="570" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#333">
    Code Quality Improvements:
  </text>
  <text x="960" y="590" font-family="Arial, sans-serif" font-size="10" fill="#333">
    • ✓ Loose coupling between components
  </text>
  <text x="960" y="605" font-family="Arial, sans-serif" font-size="10" fill="#333">
    • ✓ High cohesion within classes
  </text>
  <text x="960" y="620" font-family="Arial, sans-serif" font-size="10" fill="#333">
    • ✓ Open/Closed principle compliance
  </text>
  <text x="960" y="635" font-family="Arial, sans-serif" font-size="10" fill="#333">
    • ✓ Single Responsibility principle
  </text>
  <text x="960" y="650" font-family="Arial, sans-serif" font-size="10" fill="#333">
    • ✓ Dependency Inversion principle
  </text>
  <text x="960" y="665" font-family="Arial, sans-serif" font-size="10" fill="#333">
    • ✓ Enhanced testability and maintainability
  </text>

  <!-- Arrows showing relationships -->
  <!-- Factory inheritance -->
  <path d="M 590 180 L 590 170" fill="none" stroke="#666" stroke-width="2" marker-end="url(#inheritanceArrow)"/>
  
  <!-- Observer relationship -->
  <path d="M 1140 130 L 1160 130" fill="none" stroke="#666" stroke-width="1" stroke-dasharray="5,5"/>
  
  <!-- Strategy composition -->
  <path d="M 190 380 L 210 380" fill="none" stroke="#666" stroke-width="2" marker-end="url(#compositionArrow)"/>
  
  <!-- Builder direction -->
  <path d="M 670 370 L 690 370" fill="none" stroke="#666" stroke-width="1" stroke-dasharray="5,5"/>
  
  <!-- Command relationships -->
  <path d="M 1120 370 L 1140 370" fill="none" stroke="#666" stroke-width="1" stroke-dasharray="5,5"/>
  <path d="M 1230 370 L 1250 370" fill="none" stroke="#666" stroke-width="1" stroke-dasharray="5,5"/>
  
  <!-- Adapter composition -->
  <path d="M 290 600 L 310 600" fill="none" stroke="#666" stroke-width="2" marker-end="url(#compositionArrow)"/>
  
  <!-- Decorator inheritance and composition -->
  <path d="M 600 590 L 620 590" fill="none" stroke="#666" stroke-width="2" marker-end="url(#inheritanceArrow)"/>
  <path d="M 720 590 L 740 590" fill="none" stroke="#666" stroke-width="2" marker-end="url(#inheritanceArrow)"/>

  <!-- Legend -->
  <rect x="50" y="720" width="500" height="120" fill="none" stroke="#ccc" stroke-width="1"/>
  <text x="60" y="740" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#333">
    Pattern Implementation Legend:
  </text>
  
  <line x1="60" y1="760" x2="80" y2="760" stroke="#666" stroke-width="2" marker-end="url(#inheritanceArrow)"/>
  <text x="85" y="765" font-family="Arial, sans-serif" font-size="11" fill="#333">
    Inheritance relationship (is-a)
  </text>
  
  <line x1="60" y1="780" x2="80" y2="780" stroke="#666" stroke-width="2" marker-end="url(#compositionArrow)"/>
  <text x="85" y="785" font-family="Arial, sans-serif" font-size="11" fill="#333">
    Composition relationship (has-a)
  </text>
  
  <line x1="60" y1="800" x2="80" y2="800" stroke="#666" stroke-width="1" stroke-dasharray="5,5"/>
  <text x="85" y="805" font-family="Arial, sans-serif" font-size="11" fill="#333">
    Association/Usage relationship
  </text>
  
  <text x="280" y="765" font-family="Arial, sans-serif" font-size="11" fill="#333">
    • Each pattern solves specific design problems
  </text>
  <text x="280" y="785" font-family="Arial, sans-serif" font-size="11" fill="#333">
    • Patterns can be combined for complex solutions
  </text>
  <text x="280" y="805" font-family="Arial, sans-serif" font-size="11" fill="#333">
    • Focus on flexibility, reusability, and maintainability
  </text>
  <text x="280" y="825" font-family="Arial, sans-serif" font-size="11" fill="#333">
    • All patterns follow SOLID principles
  </text>

  <!-- Implementation Notes -->
  <rect x="600" y="720" width="750" height="120" fill="#f8f9fa" stroke="#dee2e6" stroke-width="1" rx="5"/>
  <text x="610" y="740" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#333">
    CppVerseHub Pattern Implementation Notes:
  </text>
  
  <text x="610" y="760" font-family="Arial, sans-serif" font-size="11" fill="#333">
    • <strong>Singleton:</strong> Thread-safe ResourceManager using std::call_once and Meyer's singleton
  </text>
  <text x="610" y="775" font-family="Arial, sans-serif" font-size="11" fill="#333">
    • <strong>Factory:</strong> Smart pointer returns with perfect forwarding for entity creation
  </text>
  <text x="610" y="790" font-family="Arial, sans-serif" font-size="11" fill="#333">
    • <strong>Observer:</strong> Type-safe notifications with weak_ptr to prevent memory leaks
  </text>
  <text x="610" y="805" font-family="Arial, sans-serif" font-size="11" fill="#333">
    • <strong>Strategy:</strong> std::function and lambdas for flexible algorithm selection
  </text>
  <text x="610" y="820" font-family="Arial, sans-serif" font-size="11" fill="#333">
    • <strong>Command:</strong> RAII and undo functionality with exception safety guarantees
  </text>

  <!-- Arrow markers -->
  <defs>
    <!-- Inheritance arrow (hollow triangle) -->
    <marker id="inheritanceArrow" markerWidth="10" markerHeight="10" 
            refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="white" stroke="#666" stroke-width="1"/>
    </marker>
    
    <!-- Composition arrow (filled diamond) -->
    <marker id="compositionArrow" markerWidth="10" markerHeight="10" 
            refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,3 L3,0 L9,3 L3,6 z" fill="#666"/>
    </marker>
  </defs>
</svg>